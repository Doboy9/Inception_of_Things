Vagrant.configure("2") do |config|
  config.vm.box = "debian/bullseye64"

  config.vm.define "dboireS" do |machine_one|
    machine_one.vm.hostname = "dboireS"
    machine_one.vm.network "private_network", ip: "192.168.56.110"

    config.vm.synced_folder ".", "/vagrant/k8s"
    # Provision the machine to install K3s in server mode
    machine_one.vm.provision "shell", inline: <<-SHELL
      export DEBIAN_FRONTEND=noninteractive
      sudo apt-get update
      sudo apt-get install -y curl

      # Install K3s in server mode (master node) with a custom node name and IP
      curl -sSL https://get.k3s.io | sh -s - server --node-ip 192.168.56.110 --node-name dboireS

      # Install kubectl for Kubernetes management
      sudo curl -LO "https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl"
      sudo chmod +x ./kubectl
      sudo mv ./kubectl /usr/local/bin/kubectl

      # Fix permissions for kubeconfig file
      sudo chmod 644 /etc/rancher/k3s/k3s.yaml
      sudo chown vagrant:vagrant /etc/rancher/k3s/k3s.yaml

      # Wait for K3s to be fully set up
      echo "Waiting for K3s to be fully set up..."
      while ! sudo kubectl get nodes --kubeconfig /etc/rancher/k3s/k3s.yaml; do
        echo "Waiting for K3s server to be ready..."
        sleep 5
      done

      # Set KUBECONFIG environment variable for the current session
      export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

      # Add KUBECONFIG to the user's shell profile for future sessions
      echo 'export KUBECONFIG=/etc/rancher/k3s/k3s.yaml' >> /home/vagrant/.bashrc

      # Set up Kubernetes resources (ConfigMaps, Deployments, Services, Ingress)
      kubectl apply -f /vagrant/k8s/configmaps/app1-configmap.yaml
      kubectl apply -f /vagrant/k8s/configmaps/app2-configmap.yaml
      kubectl apply -f /vagrant/k8s/configmaps/app3-configmap.yaml

      kubectl apply -f /vagrant/k8s/deployments/app1-deployment.yaml
      kubectl apply -f /vagrant/k8s/deployments/app2-deployment.yaml
      kubectl apply -f /vagrant/k8s/deployments/app3-deployment.yaml

      kubectl apply -f /vagrant/k8s/services/app1-service.yaml
      kubectl apply -f /vagrant/k8s/services/app2-service.yaml
      kubectl apply -f /vagrant/k8s/services/app3-service.yaml

      kubectl apply -f /vagrant/k8s/ingresses/ingress.yaml
    SHELL

    machine_one.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.cpus = 1
    end
  end
end